{"version":3,"file":"static/js/919.17996552.chunk.js","mappings":"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","sources":["api/api.jsx","components/BackLink/BackLinkStyled.js","components/BackLink/index.js","components/BackLink/BackLink.jsx","views/MovieDetailsPage/MovieDetailsPage.jsx","views/MovieDetailsPage/MovieDetailsPageStyled.js"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = 'api_key=abcc14051ec92b4ea953107c3446d1d4';\nconst error = error => console.log('Error', error.message);\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendTitles() {\n  const response = await axios\n    .get(`/trending/movie/week`, {\n      params: {\n        api_key: 'abcc14051ec92b4ea953107c3446d1d4',\n      },\n    })\n    .catch(error);\n  return response.data.results;\n}\n\nexport async function fetchMovieId(movieId) {\n  const response = await axios\n    .get(`/movie/${movieId}`, {\n      params: {\n        api_key: 'abcc14051ec92b4ea953107c3446d1d4',\n      },\n    })\n    .catch(error);\n  return response.data;\n}\nexport async function fetchCast(movieId) {\n  const response = await axios\n    .get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: 'abcc14051ec92b4ea953107c3446d1d4',\n      },\n    })\n    .catch(error);\n  return response.data;\n}\n\nexport async function fetchReviews(movieId) {\n  const response = await axios\n    .get(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: 'abcc14051ec92b4ea953107c3446d1d4',\n      },\n    })\n    .catch(error);\n  return response.data.results;\n}\n\nexport async function fetchMovie(movie) {\n  const response = await axios\n    .get(\n      `/search/movie?${API_KEY}&language=en-US&query=${movie}&page=1&include_adult=false`\n    )\n    .catch(error);\n  return response.data.results;\n}\n\nfetchMovieId.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\n\nfetchCast.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\nfetchReviews.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\nfetchMovie.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport const Link = styled(RouterLink)`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  padding: 4px 8px;\n  margin-bottom: 1px;\n  text-decoration: none;\n  color: #010101;\n  :hover {\n    color: white;\n  }\n`;\n","import BackLink from './BackLink';\nexport default BackLink;\n","import { useLocation } from 'react-router-dom';\n// import { FaArrowLeft } from 'react-icons/fa';\nimport { Link } from 'components/BackLink/BackLinkStyled';\n\nexport default function BackLink() {\n  const location = useLocation();\n  return (\n    <Link to={location?.state?.from ?? '/'}>\n      {/* <FaArrowLeft /> */}\n      Go back\n    </Link>\n  );\n}\n","import { fetchMovieId } from 'api/api';\nimport { useEffect, useState } from 'react';\nimport { useParams, NavLink, Outlet, useLocation } from 'react-router-dom';\nimport {\n  List,\n  ListItem,\n  InfoBlock,\n  ImageBlock,\n  InfoImageBlock,\n} from './MovieDetailsPageStyled';\nimport BackLink from '../../components/BackLink';\n\nexport default function MovieDetailsPage() {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const basePageUrl = 'https://image.tmdb.org/t/p/w300';\n  const noPoster =\n    'https://sd.keepcalms.com/i-w600/keep-calm-poster-not-found.jpg';\n\n  useEffect(() => {\n    fetchMovieId(movieId).then(setMovie);\n  }, [movieId]);\n  return (\n    <>\n      {movie && (\n        <div>\n          <div>\n            <BackLink />\n          </div>\n          <InfoImageBlock>\n            <ImageBlock>\n              {movie.poster_path ? (\n                <img src={basePageUrl + movie.poster_path} alt=\"poster\" />\n              ) : (\n                <img src={noPoster} alt=\"poster\" />\n              )}\n            </ImageBlock>\n            <InfoBlock>\n              <h2>{movie.title + ` (${movie.release_date.slice(0, 4)})`}</h2>\n              <p>User score: {movie.vote_average * 10}%</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <List>\n                {movie.genres.map(genre => (\n                  <ListItem key={genre.id}>{genre.name}</ListItem>\n                ))}\n              </List>\n            </InfoBlock>\n          </InfoImageBlock>\n          <hr />\n          <p>Additional Information</p>\n          <ul>\n            <li>\n              <NavLink\n                to=\"cast\"\n                state={{ from: location?.state?.from || '/' }}\n                className=\"notActive\"\n              >\n                Cast\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to=\"reviews\"\n                state={{ from: location?.state?.from || '/' }}\n                className=\"notActive\"\n              >\n                Reviews\n              </NavLink>\n            </li>\n          </ul>\n          <hr />\n          <div>\n            <Outlet />\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  padding-inline-start: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  &:not(:first-child) {\n    margin-left: 5px;\n  }\n`;\n\nexport const InfoBlock = styled.div`\n  display: inline-block;\n  margin-left: 20px;\n  margin-top: 10px;\n  font-size: 20px;\n`;\n\nexport const ImageBlock = styled.div`\n  display: inline-block;\n`;\n\nexport const InfoImageBlock = styled.div`\n  display: flex;\n`;\n"],"names":["API_KEY","error","console","log","message","fetchTrendTitles","axios","params","api_key","catch","response","data","results","fetchMovieId","movieId","fetchCast","fetchReviews","fetchMovie","movie","propTypes","PropTypes","Link","styled","RouterLink","location","useLocation","to","state","from","MovieDetailsPage","useParams","useState","setMovie","useEffect","then","InfoImageBlock","ImageBlock","poster_path","src","alt","InfoBlock","title","release_date","slice","vote_average","overview","List","genres","map","genre","ListItem","name","id","className"],"sourceRoot":""}