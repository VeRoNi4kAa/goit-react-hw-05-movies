{"version":3,"file":"static/js/721.2dd616ea.chunk.js","mappings":"6UAGMA,EAAU,2CACVC,EAAQ,SAAAA,GAAK,OAAIC,QAAQC,IAAI,QAASF,EAAMG,QAA/B,EAGZ,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,+BACQN,IAC5BO,MAAMN,GAHJ,cACCO,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACkBN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,YAA+BZ,IAAWO,MAAMN,GADlE,cACCO,EADD,yBAEEA,EAASC,MAFX,kEAIA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAyBD,GAAzB,uFACkBN,EAAAA,EAAAA,IAAA,iBACNM,EADM,oBACaZ,IACjCO,MAAMN,GAHJ,cACCO,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,uFACkBN,EAAAA,EAAAA,IAAA,iBACNM,EADM,oBACaZ,IACjCO,MAAMN,GAHJ,cACCO,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,uFACkBV,EAAAA,EAAAA,IAAA,wBAEFN,EAFE,iCAE8BgB,EAF9B,gCAIpBT,MAAMN,GALJ,cACCO,EADD,yBAMEA,EAASC,KAAKC,SANhB,kEA3BPJ,EAAAA,EAAAA,SAAAA,QAAyB,+BAoCzBK,EAAaM,UAAY,CACvBL,QAASM,IAAAA,OAAAA,YAGXL,EAAUI,UAAY,CACpBL,QAASM,IAAAA,OAAAA,YAEXJ,EAAaG,UAAY,CACvBL,QAASM,IAAAA,OAAAA,YAEXH,EAAWE,UAAY,CACrBL,QAASM,IAAAA,OAAAA,W,kIC/CI,SAASC,IACtB,IAAQP,GAAYQ,EAAAA,EAAAA,MAAZR,QACR,GAAwBS,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OAJAC,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,GAAUD,GAASa,KAAKF,EACzB,GAAE,CAACX,KAGF,8BACGU,IACC,0BACE,SAAC,EAAAI,KAAD,UACGJ,EAAKA,KAAKK,KAAI,SAAAC,GAAK,OAClB,UAAC,EAAAC,KAAD,WACGD,EAAME,cACL,SAAC,EAAAC,IAAD,CAAKC,IAfD,kCAeoBJ,EAAME,aAAcG,IAAI,WAEhD,SAAC,EAAAF,IAAD,CAAKC,IAhBL,2DAgBmBC,IAAI,WAEzB,uBAAIL,EAAMM,QACV,uCAAeN,EAAMO,eAPZP,EAAMQ,GADC,SAgB/B,C,iJClCYV,EAAOW,EAAAA,GAAAA,GAAH,qJAQJN,EAAMM,EAAAA,GAAAA,IAAH,2DAKHR,EAAOQ,EAAAA,GAAAA,GAAH,oM,4CCdjB,UAAelB,EAAf,O","sources":["components/api/api.jsx","views/Cast/Cast.jsx","views/Cast/Cast.styled.js","views/Cast/index.js"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = 'api_key=abcc14051ec92b4ea953107c3446d1d4';\nconst error = error => console.log('Error', error.message);\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendTitles() {\n  const response = await axios\n    .get(`/trending/movie/week?${API_KEY}`)\n    .catch(error);\n  return response.data.results;\n}\n\nexport async function fetchMovieId(movieId) {\n  const response = await axios.get(`/movie/${movieId}?${API_KEY}`).catch(error);\n  return response.data;\n}\nexport async function fetchCast(movieId) {\n  const response = await axios\n    .get(`/movie/${movieId}/credits?${API_KEY}`)\n    .catch(error);\n  return response.data;\n}\n\nexport async function fetchReviews(movieId) {\n  const response = await axios\n    .get(`/movie/${movieId}/reviews?${API_KEY}`)\n    .catch(error);\n  return response.data.results;\n}\n\nexport async function fetchMovie(movie) {\n  const response = await axios\n    .get(\n      `/search/movie?${API_KEY}&language=en-US&query=${movie}&page=1&include_adult=false`\n    )\n    .catch(error);\n  return response.data.results;\n}\n\nfetchMovieId.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\n\nfetchCast.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\nfetchReviews.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\nfetchMovie.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n","import { fetchCast } from 'components/api/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { List, Img, Item } from './Cast.styled';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const basePageUrl = 'https://image.tmdb.org/t/p/w200';\n  const noPhoto = 'https://wvw.db1223.com/images/19015766/icon/12985564.jpg';\n\n  useEffect(() => {\n    fetchCast(movieId).then(setCast);\n  }, [movieId]);\n\n  return (\n    <>\n      {cast && (\n        <div>\n          <List>\n            {cast.cast.map(actor => (\n              <Item key={actor.id}>\n                {actor.profile_path ? (\n                  <Img src={basePageUrl + actor.profile_path} alt=\"actor\" />\n                ) : (\n                  <Img src={noPhoto} alt=\"actor\" />\n                )}\n                <p>{actor.name}</p>\n                <p>Character: {actor.character}</p>\n              </Item>\n            ))}\n          </List>\n        </div>\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  flex-flow: row wrap;\n  justify-content: space-between;\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n  height: 300px;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc((100% - 60px) / 3);\n  margin-right: 30px;\n\n  &:nth-child(3n) {\n    margin-right: 0;\n  }\n  &:nth-last-child(-n + 3) {\n    margin-bottom: 0px;\n  }\n`;\n","import Cast from './Cast';\nexport default Cast;\n"],"names":["API_KEY","error","console","log","message","fetchTrendTitles","axios","catch","response","data","results","fetchMovieId","movieId","fetchCast","fetchReviews","fetchMovie","movie","propTypes","PropTypes","Cast","useParams","useState","cast","setCast","useEffect","then","List","map","actor","Item","profile_path","Img","src","alt","name","character","id","styled"],"sourceRoot":""}